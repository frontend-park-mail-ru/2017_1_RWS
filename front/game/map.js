(function(){
	class Map{
		constructor(){
			this.width = 26;
			this.height = 26;
			this.tileSize = 128;
			this.image = pjs.tiles.newImage("assets/tile2.png");
			this.level =
			/*[6, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 7, 7, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 8, 14, 4, 5, 4, 5, 4, 5, 4, 5, 4, 5, 4, 14, 16, 5, 4, 5, 4, 5, 4, 5, 4, 5, 4, 5, 16, 14, 12, 13, 12, 13, 12, 13, 12, 13, 12, 13, 12, 14, 16, 13, 12, 13, 12, 13, 12, 13, 12, 13, 12, 13, 16, 14, 4, 5, 4, 5, 4, 32, 4, 5, 4, 5, 4, 22, 24, 5, 4, 5, 4, 5, 4, 5, 4, 5, 4, 5, 16, 14, 12, 13, 12, 13, 12, 38, 12, 13, 12, 13, 12, 13, 12, 13, 12, 13, 6, 7, 8, 13, 12, 13, 12, 13, 16, 14, 4, 5, 4, 30, 37, 15, 37, 31, 4, 5, 4, 5, 4, 5, 4, 5, 14, 15, 16, 5, 4, 5, 4, 5, 16, 14, 12, 13, 12, 13, 12, 29, 12, 13, 12, 13, 12, 13, 12, 13, 12, 13, 22, 23, 24, 13, 12, 13, 12, 13, 16, 14, 4, 5, 4, 5, 4, 5, 4, 5, 4, 5, 4, 5, 4, 5, 4, 5, 4, 5, 4, 5, 4, 5, 4, 5, 16, 14, 12, 13, 12, 13, 12, 13, 12, 13, 12, 13, 12, 13, 12, 13, 12, 13, 12, 13, 12, 13, 12, 13, 12, 13, 16, 14, 4, 5, 4, 5, 4, 5, 4, 5, 4, 5, 4, 5, 4, 5, 4, 5, 4, 5, 4, 5, 4, 5, 4, 5, 16, 14, 12, 13, 12, 13, 12, 13, 12, 13, 30, 31, 12, 13, 12, 13, 12, 13, 6, 7, 8, 13, 12, 13, 12, 13, 16, 14, 4, 5, 4, 5, 4, 5, 4, 5, 4, 5, 4, 5, 4, 5, 4, 5, 14, 15, 16, 5, 4, 5, 4, 5, 16, 14, 12, 13, 12, 13, 12, 30, 31, 13, 12, 13, 12, 13, 12, 13, 12, 13, 22, 23, 24, 13, 12, 13, 12, 13, 16, 14, 4, 5, 4, 5, 4, 5, 4, 5, 4, 5, 30, 31, 4, 5, 4, 5, 4, 5, 4, 5, 4, 5, 4, 5, 16, 14, 12, 13, 12, 13, 12, 13, 12, 32, 12, 13, 12, 13, 12, 13, 12, 13, 12, 13, 12, 13, 12, 13, 12, 13, 16, 14, 4, 5, 4, 5, 4, 5, 4, 29, 4, 5, 4, 5, 4, 5, 4, 5, 4, 5, 4, 5, 4, 5, 4, 5, 16, 14, 12, 13, 12, 13, 12, 13, 12, 13, 12, 13, 12, 13, 12, 13, 12, 13, 12, 13, 12, 13, 12, 13, 12, 13, 16, 22, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 24]*/

			/*[30, 37, 37, 37, 37, 7, 37, 37, 7, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 7, 37, 37, 37, 37, 8, 10, 10, 10, 10, 10, 29, 10, 10, 29, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 29, 10, 10, 10, 10, 38, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 6, 7, 8, 10, 10, 10, 10, 6, 37, 16, 32, 10, 10, 10, 10, 6, 8, 10, 10, 10, 10, 10, 20, 10, 10, 10, 14, 15, 16, 10, 10, 10, 10, 38, 10, 38, 38, 10, 10, 10, 10, 14, 24, 10, 10, 10, 10, 10, 10, 10, 20, 10, 22, 15, 16, 10, 10, 32, 10, 38, 10, 38, 38, 10, 10, 10, 10, 38, 10, 10, 32, 10, 10, 30, 37, 31, 10, 10, 10, 15, 16, 10, 10, 38, 10, 38, 10, 38, 38, 10, 10, 10, 10, 29, 10, 10, 38, 10, 10, 10, 10, 10, 20, 10, 6, 15, 16, 10, 10, 38, 10, 29, 10, 38, 38, 10, 10, 10, 10, 10, 10, 10, 38, 10, 10, 10, 10, 10, 10, 10, 22, 15, 16, 10, 10, 29, 10, 10, 10, 38, 38, 10, 30, 37, 37, 31, 10, 10, 29, 10, 10, 10, 10, 10, 10, 10, 10, 14, 23, 31, 10, 10, 30, 37, 37, 16, 38, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 29, 10, 10, 10, 10, 10, 10, 10, 38, 38, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 32, 10, 10, 10, 10, 10, 10, 6, 37, 31, 10, 30, 16, 38, 10, 30, 37, 7, 37, 37, 37, 31, 10, 10, 10, 10, 29, 10, 10, 10, 10, 10, 10, 38, 10, 10, 10, 10, 38, 38, 10, 10, 10, 29, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 32, 10, 10, 29, 10, 10, 10, 10, 38, 38, 10, 10, 10, 10, 10, 32, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 38, 10, 10, 10, 10, 10, 10, 10, 38, 14, 37, 31, 10, 10, 10, 29, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 38, 10, 10, 32, 10, 10, 10, 10, 38, 38, 10, 10, 10, 10, 10, 10, 10, 10, 32, 10, 10, 10, 10, 10, 10, 10, 38, 10, 10, 29, 10, 10, 10, 10, 38, 38, 10, 10, 10, 10, 10, 10, 10, 10, 38, 10, 10, 10, 10, 10, 10, 10, 38, 10, 10, 10, 10, 10, 10, 10, 38, 22, 37, 37, 37, 37, 37, 37, 37, 37, 23, 37, 37, 37, 37, 37, 37, 37, 23, 37, 37, 37, 31, 10, 10, 30, 24]*/
			
			[6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 8, 14, 33, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 34, 16, 14, 16, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 14, 16, 14, 16, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 11, 14, 16, 14, 16, 9, 10, 20, 10, 10, 6, 8, 10, 10, 32, 10, 10, 32, 10, 10, 6, 8, 10, 10, 20, 10, 11, 14, 16, 14, 16, 9, 10, 10, 10, 10, 22, 24, 10, 10, 38, 10, 10, 38, 10, 10, 22, 24, 10, 10, 10, 10, 11, 14, 16, 14, 16, 9, 10, 10, 10, 10, 10, 10, 10, 10, 29, 10, 10, 29, 10, 10, 10, 10, 10, 10, 10, 10, 11, 14, 16, 14, 16, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 11, 14, 16, 14, 16, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 11, 14, 16, 14, 16, 9, 10, 10, 10, 10, 30, 37, 31, 10, 10, 10, 10, 10, 10, 30, 37, 31, 10, 10, 10, 10, 11, 14, 16, 14, 16, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 11, 14, 16, 14, 16, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 11, 14, 16, 14, 16, 9, 10, 20, 10, 10, 32, 10, 10, 10, 32, 10, 10, 32, 10, 10, 10, 32, 10, 10, 20, 10, 11, 14, 16, 14, 16, 9, 10, 10, 10, 10, 29, 10, 10, 10, 29, 10, 10, 29, 10, 10, 10, 29, 10, 10, 10, 10, 11, 14, 16, 14, 16, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 11, 14, 16, 14, 16, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 11, 14, 16, 14, 16, 9, 10, 10, 10, 10, 30, 37, 31, 10, 10, 10, 10, 10, 10, 30, 37, 31, 10, 10, 10, 10, 11, 14, 16, 14, 16, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 11, 14, 16, 14, 16, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 11, 14, 16, 14, 16, 9, 10, 10, 10, 10, 10, 10, 10, 10, 32, 10, 10, 32, 10, 10, 10, 10, 10, 10, 10, 10, 11, 14, 16, 14, 16, 9, 10, 10, 10, 10, 6, 8, 10, 10, 38, 10, 10, 38, 10, 10, 6, 8, 10, 10, 10, 10, 11, 14, 16, 14, 16, 9, 10, 20, 10, 10, 22, 24, 10, 10, 29, 10, 10, 29, 10, 10, 22, 24, 10, 10, 20, 10, 11, 14, 16, 14, 16, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 11, 14, 16, 14, 16, 17, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 14, 16, 14, 35, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 36, 16, 22, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 24]
		
			this.blocks = [];
			this.walls = [];

			this.wallIndex = [6,7,8,14,15,16,20,22,23,24,29,30,31,31,32,37,38];	
			this.map2d = [];
		}
	
		generateWalls(){
			let t = this.level;
			OOP.forArr(t, function(el, i, t){ 
				var block = game.newAnimationObject({
						x: (i%26) * this.tileSize,
						y: parseInt(i/26) * this.tileSize,
						w: this.tileSize,
						h: this.tileSize,
						animation: this.image.getAnimation(((el-1)%8) * this.tileSize, parseInt((el-1)/8) * this.tileSize, this.tileSize, this.tileSize, 1), 
						userData: {
							isWall: (this.wallIndex.indexOf(el) != -1),
						}
				});
				this.blocks.push(block);
				if(block.isWall) this.walls.push(block);
			}.bind(this));
		};

        generate2d(){
            let l = this.level;
            while(l.length) this.map2d.push(l.splice(0,26));
			console.log(this.map2d);
        }
		
		draw(){
			OOP.drawArr(this.blocks);
		};

        isItWall(x, y){
            console.log(x + " " + y + " " + this.map2d[y][x]);
            return (this.wallIndex.indexOf(this.map2d[y][x]) != -1);
        }
	}

	window.Map = Map;
	
})();

var map = new Map();
map.generateWalls();
map.generate2d();
